@model GlobeAuction.Models.BidderViewModel

@{
    ViewBag.Title = "Delete Bidder";
}

<h2>Delete Bidder</h2>

<h3>Are you sure you want to delete this bidder?  This will keep all their information in the database but just remove it from the website.</h3>

<div>
    <h4>Contact Information</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.BidderNumber)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BidderNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Phone)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Phone)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ZipCode)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ZipCode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AttendedEvent)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.AttendedEvent)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsPaymentReminderSent)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.IsPaymentReminderSent)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PaymentMethod)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.PaymentMethod)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsCheckoutNudgeEmailSent)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.IsCheckoutNudgeEmailSent)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsCheckoutNudgeTextSent)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.IsCheckoutNudgeTextSent)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreateDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreateDate)
        </dd>

    </dl>

    <h4>Student(s)</h4>
    <hr />
    <dl class="dl-horizontal">
        @for (int i = 0; i < Model.Students.Count; i++)
        {
            <dt>
                @Html.Label("Child " + (i + 1) + " Homeroom")
            </dt>

            <dd>
                @Html.DisplayFor(model => Model.Students[i].HomeroomTeacher)
            </dd>
        }
    </dl>

    <h4>Auction Guest(s)</h4>
    <hr />
    <dl class="dl-horizontal">
        @for (int i = 0; i < Model.AuctionGuests.Count; i++)
        {
            <dt>
                @Html.Label("Guest " + (i + 1))
            </dt>

            <dd>
                @string.Format("{0} {1} - {2} (paid {3:C})",
                                       Model.AuctionGuests[i].FirstName,
                                       Model.AuctionGuests[i].LastName,
                                       Model.AuctionGuests[i].TicketType,
                                       Model.AuctionGuests[i].TicketPricePaid.GetValueOrDefault(0))
            </dd>
        }
    </dl>

    <h4>Additional Purchases(s)</h4>
    <hr />
    <dl class="dl-horizontal">
        @foreach (var item in Model.StoreItemPurchases)
        {
            <dt></dt>
            <dd>
                @string.Format("{0} - {1} - {2:C} (paid {3:C})",
                                       item.StoreItem.Title,
                                         (item.StoreItem.IsRaffleTicket && item.IsPaid ? "Ticket #" + item.StoreItemPurchaseId.ToString("D8") : item.Quantity.ToString()),
                                       item.Price,
                                       item.PricePaid.GetValueOrDefault(0))
            </dd>
        }
    </dl>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-actions no-color">
        <input type="submit" value="Delete" class="btn btn-default" /> |
        @Html.ActionLink("Back to List", "Index")
    </div>
}
</div>
