@model GlobeAuction.Models.BidderListViewModel

<link rel="stylesheet" type="text/css" href="~/DataTables/datatables.min.css" />
<script type="text/javascript" src="~/DataTables/datatables.min.js"></script>

@{
    ViewBag.Title = "Registered Bidders";
}

<h2>Registered Bidders</h2>

<p>
    <ul class="list-inline">
        <li>@Html.ActionLink("Register a New Bidder", "Register")</li>
        <li><a href="#ticketSalesAnchor">Ticket Sales</a></li>
    </ul>
</p>

@using (Html.BeginForm("SubmitBiddersAction", "Bidders", FormMethod.Post, new { id = "submitBiddersActionForm" }))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("biddersAction");
    @Html.Hidden("startingPaddleNumber");
    @Html.Hidden("selectedBidderNumbers");

    <table class="table table-striped table-bordered" id="biddersTable">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ModelRender.BidderNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModelRender.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModelRender.LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModelRender.Phone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModelRender.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModelRender.GuestCount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModelRender.TicketsPaid)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModelRender.ItemsCount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModelRender.ItemsPaid)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModelRender.TotalPaid)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModelRender.IsPaymentReminderSent)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModelRender.IsCatalogNudgeEmailSent)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModelRender.CreateDate)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Bidders)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.BidderNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Phone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.GuestCount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TicketsPaid)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemsCount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemsPaid)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TotalPaid)
                    </td>
                    <td>
                        @(item.IsPaymentReminderSent ? "Yes" : "No")
                    </td>
                    <td>
                        @(item.IsCatalogNudgeEmailSent ? "Yes" : "No")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreateDate)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.BidderId }) |
                        @Html.ActionLink("Details", "Details", new { id = item.BidderId }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.BidderId }) |
                        @if (item.TicketsPaid == 0)
                        {
                            @Html.ActionLink("PayPal", "RedirectToPayPal", new { id = item.BidderId })
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<br />

<a name="ticketSalesAnchor"></a>
<h2>Ticket Sales</h2>

<table class="table table-striped table-bordered" id="ticketSalesTable">
    <thead>
        <tr>
            <th>
                Ticket Type
            </th>
            <th>
                Number Paid
            </th>
            <th>
                Number Unpaid
            </th>
            <th>
                Total Paid
            </th>
            <th>
                Total Unpaid
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.TicketSales)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TicketType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumberPaid)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumberUnPaid)
                </td>
                <td>
                    @item.TotalPaid.ToString("C")
                </td>
                <td>
                    @item.TotalUnpaid.ToString("C")
                </td>
            </tr>
        }
    </tbody>
</table>

<script type="text/javascript">

    //expand the page space
    $("#bodyContainer").removeClass("container");

    function getSelectedRows(data) {
        var ids = '';
        for (var i = 0; i < data.length; i++) {
            ids += data[i][0] + ',';
        }
        return ids.trimRight(',');
    }

    $(document).ready(function () {
        $('#biddersTable').dataTable({
            "iDisplayLength": 100,
            dom: 'Bfrtip',
            stateSave: true,
            select: {
                style: 'os'
            },
            buttons: [
                {
                    extend: 'excelHtml5',
                    title: 'Export'
                },
                {
                    text: 'Re-Number All Paddles',
                    action: function (e, dt, node, config) {
                        var startingPaddleNumber = prompt("Are you sure you want to do this?  This will re-number bidders sorted by LastName, FirstName.  You SHOULD NOT DO THIS ONCE THE AUCTION HAS STARTED!  To proceed, enter the Bidder Number to start with...");
                        if (startingPaddleNumber != null) {
                            $("#startingPaddleNumber").val(startingPaddleNumber);
                            $("#biddersAction").val("RenumberBidderPaddles");
                            $('#submitBiddersActionForm').submit();
                        }
                    }
                },
                {
                    text: 'Re-Number Single Paddle',
                    action: function (e, dt, node, config) {
                        var data = dt.rows({ selected: true }).data();
                        if (data.length != 1) {
                            alert('You must select a single bidder you want change the paddle for.');
                        }
                        else {
                            var paddleNumber = prompt("Are you sure you want to change this paddle number?  To proceed, enter the Bidder Number to change to...");
                            if (paddleNumber != null) {
                                $("#selectedBidderNumbers").val(getSelectedRows(data));
                                $("#startingPaddleNumber").val(paddleNumber);
                                $("#biddersAction").val("RenumberSinglePaddle");
                                $('#submitBiddersActionForm').submit();
                            }
                        }
                    }
                },
                {
                    text: 'Send Bidder Nudge Emails for Auction Launch',
                    action: function (e, dt, node, config) {
                        var data = dt.rows({ selected: true }).data();
                        if (data.length == 0) {
                            alert('You must select which bidders you want to email first.');
                        }
                        else {
                            $("#selectedBidderNumbers").val(getSelectedRows(data));

                            if (confirm("Are you sure?  This will email all the bidders you have selected their paddle number and mobile bidding instructions.")) {
                                $("#biddersAction").val("SendBidderRegistrationNudge");
                                $('#submitBiddersActionForm').submit();
                            }
                        }
                    }
                },
            ]
        });

        $('#ticketSalesTable').dataTable({
            "iDisplayLength": 100,
            dom: 'Bfrtip',
            stateSave: true,
            select: {
                style: 'os'
            },
            buttons: [
                {
                    extend: 'excelHtml5',
                    title: 'Export'
                }
            ]
        });
    });
</script>
