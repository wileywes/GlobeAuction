@model GlobeAuction.Models.EnterBidViewModel

@{
    ViewBag.Title = "Enter new Bid";
}

<h3>
    @Html.DisplayFor(m => m.AuctionItem.Title)
</h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.Hidden("itemNo", Model.AuctionItem.UniqueItemNumber)

    <div class="container">
        <div class="row">
            <div class="col-md-4">
                @if (!string.IsNullOrEmpty(Model.AuctionItem.ImageUrl))
                {
                    <img src="@Url.Content(Model.AuctionItem.ImageUrl)" class="img-responsive" />
                }
            </div>

            <div class="col-md-8">

                <p class="lead">Item No. @Model.AuctionItem.UniqueItemNumber</p>

                <p>
                    <strong>@Html.DisplayNameFor(m => m.AuctionItem.Description):</strong>
                    <br />
                    @Html.DisplayFor(m => m.AuctionItem.Description)
                </p>

                <p>
                    <strong>@Html.DisplayNameFor(m => m.AuctionItem.Category):</strong>
                    @Html.DisplayFor(m => m.AuctionItem.Category)
                    <br />
                    <strong>@Html.DisplayNameFor(m => m.AuctionItem.Quantity):</strong>
                    @Html.DisplayFor(m => m.AuctionItem.Quantity)
                    <br />

                    @if (Model.AuctionItem.IsFixedPrice)
                    {
                        <strong>Fixed Price:</strong>
                        @Html.DisplayFor(m => m.AuctionItem.StartingBid)
                    }
                    else
                    {
                        <strong>@Html.DisplayNameFor(m => m.AuctionItem.StartingBid):</strong>
                        @Html.DisplayFor(m => m.AuctionItem.StartingBid)
                        <br />
                        <strong>@Html.DisplayNameFor(m => m.AuctionItem.BidIncrement):</strong>
                        @Html.DisplayFor(m => m.AuctionItem.BidIncrement)
                    }

                    @if (Model.AuctionItem.DonationItems.Any(d => d.DollarValue.HasValue))
                    {
                        <br />
                        <strong>Dollar Value:</strong>
                        @(Model.AuctionItem.DonationItems.Select(d => d.DollarValue.GetValueOrDefault(0)).Max())
                    }

                    @if (Model.AuctionItem.DonationItems.Any(d => d.ExpirationDate.HasValue))
                    {
                        <br />
                        <strong>Expiration Date:</strong>
                        @(Model.AuctionItem.DonationItems.Select(d => d.ExpirationDate.GetValueOrDefault(DateTime.MaxValue)).Min().ToString("yyyy-MM-dd"))
                    }

                    @if (Model.AuctionItem.DonationItems.Any(d => !string.IsNullOrEmpty(d.Restrictions)))
                    {
                        <br />
                        <strong>Restrictions:</strong>
                        @(string.Join(" ", Model.AuctionItem.DonationItems.Select(d => d.Restrictions)))
                    }
                </p>
            </div>
        </div>

        <div class="row top10">
            @if (Model.IsBiddingOpen || (Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanAdminUsers)))
            {
                if (Model.AuctionItem.IsFixedPrice == false || Model.AuctionItem.Quantity > Model.AllBids.Count())
                {
                    @Html.Label("New Bid to Enter", htmlAttributes: new { @class = "control-label col-md-4 text-right" })
                    <div class="col-md-8">
                        @if (Model.AuctionItem.IsFixedPrice)
                        {
                            @Html.TextBoxFor(model => model.BidAmount, new { @class = "form-control", @readonly = "readonly" })
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.BidAmount, new { @class = "form-control" })
                        }
                    </div>
                }
                else
                {
                    <div class="col-md-offset-4 col-md-8">
                        <span><b>This item is Sold Out</b></span>
                    </div>
                }
            }
            else
            {
                <div class="col-md-offset-4 col-md-8">
                    <span>Mobile bidding is not available for this item.</span>
                </div>
            }
        </div>

        <div class="row top10">
            <div class="col-md-offset-4 col-md-8 btn-toolbar">
                @if (Model.IsBiddingOpen || (Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanAdminUsers)))
                {
                    if (Model.AuctionItem.IsFixedPrice == false || Model.AuctionItem.Quantity > Model.AllBids.Count())
                    {
                        <input type="submit" class="btn btn-primary" value="Enter new Bid" />
                    }
                }

                @Html.ActionLink("Return to Bids", "Bids", "Bidders", null, htmlAttributes: new { @class = "btn btn-default" })

            </div>
        </div>

        <div class="row top20">
            @Html.Label("Existing Bids", htmlAttributes: new { @class = "control-label col-md-4 text-right" })
            <div class="col-md-8">
                @if (Model.AllBids.Any())
                {
                    <table class="table table-striped table-bordered" id="donationItemsTable">
                        <thead>
                            <tr>
                                <th>Bidder #</th>
                                <th>Amount</th>
                                <th>Winning?</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var bid in Model.AllBids.OrderByDescending(b => b.BidAmount))
                            {
                                <tr @{if (ViewBag.BidderInfo.BidderId == bid.Bidder.BidderId) { if (bid.IsWinning) { <text> class="success" </text>  } else { <text> class="warning" </text>  } } }>
                                    <td>
                                        @Html.DisplayFor(m => bid.Bidder.BidderNumber)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => bid.BidAmount)
                                    </td>
                                    <td>
                                        @(bid.IsWinning ? (ViewBag.BidderInfo.BidderId == bid.Bidder.BidderId ? "You are Currently Winning" : "Current Winner") : string.Empty)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p>
                        There are currently no bids on this item.
                    </p>
                }
            </div>
        </div>
    </div>
}