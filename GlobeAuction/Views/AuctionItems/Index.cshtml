@model GlobeAuction.Models.ItemsViewModel

<!--
<link href="~/Content/dataTables.bootstrap.css" rel="stylesheet" />
<script src="~/Scripts/jquery.dataTables.min.js"></script>
<script src="~/Scripts/dataTables.bootstrap.js"></script>

<link href="~/Content/buttons.dataTables.min.css" rel="stylesheet" />
<script src="~/Scripts/dataTables.buttons.min.js"></script>

<link href="~/Content/select.dataTables.min.css" rel="stylesheet" />
<script src="~/Scripts/dataTables.select.min.js"></script>

<script src="~/Scripts/jszip.min.js"></script>
<script src="~/Scripts/buttons.html5.min.js"></script>
-->

<link rel="stylesheet" type="text/css" href="~/DataTables/datatables.min.css" />
<script type="text/javascript" src="~/DataTables/datatables.min.js"></script>

@{
    ViewBag.Title = "Auction Items";
}

<h2>Auction Items</h2>

<p>
    @Html.ActionLink("Enter a New Donation", "Create", "DonationItems")
    <br/>
    <a href="#donationItemsAnchor">Donation Items List</a>
</p>


@using (Html.BeginForm("SubmitSelectedAuctionItems", "AuctionItems", FormMethod.Post, new { id = "submitSelectedAuctionItemsForm" }))
{
    @Html.AntiForgeryToken()

    @Html.Hidden("auctionItemsAction");
    @Html.Hidden("selectedAuctionItemIds");
    @Html.Hidden("startingAuctionItemNumber");

    <table class="table table-striped table-bordered" id="auctionItemsTable">
        <thead>
            <tr>
                <th>
                    Item No.
                </th>
                <th>
                    Title
                </th>
                <th>
                    Description
                </th>
                <th>
                    Category
                </th>
                <th>
                    # Items
                </th>
                <th>
                    Total Value
                </th>
                <th>
                    Starting Bid
                </th>
                <th>
                    Bid Increment
                </th>
                <th>
                    Winner #
                </th>
                <th>
                    Winning Bid
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.AuctionItems)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.UniqueItemNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DonationItemsCount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DonationItemsTotalValue)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartingBid)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BidIncrement)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.WinningBidderNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.WinningBid)
                    </td>
                    <td class="text-nowrap">
                        @Html.ActionLink("Edit", "Edit", new { id = item.AuctionItemId }) |
                        @Html.ActionLink("Details", "Details", new { id = item.AuctionItemId }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.AuctionItemId })
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<br /><br />

<a name="donationItemsAnchor"></a>

<h2>Donation Items</h2>
<p>These need to be set up for the auction and will then appear in the table above</p>

@using (Html.BeginForm("SubmitSelectedDonationItems", "AuctionItems", FormMethod.Post, new { id = "submitSelectedDonationItemsForm" }))
{
    @Html.AntiForgeryToken()

    @Html.Hidden("donationItemsAction");
    @Html.Hidden("selectedDonationItemIds");
    @Html.Hidden("basketItemNumber");
    @Html.Hidden("numberOfCopies")

    <table class="table table-striped table-bordered" id="donationItemsTable">
        <thead>
            <tr>
                <th>
                    Id
                </th>
                <th>
                    Category
                </th>
                <th>
                    Title
                </th>
                <th>
                    Description
                </th>
                <th>
                    Restrictions
                </th>
                <th>
                    Expiration
                </th>
                <th>
                    Value
                </th>
                <th>
                    Has Display
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @Html.EditorFor(model => model.DonationsNotInAuctionItem)
        </tbody>
    </table>
}

<script type="text/javascript">

    //expand the page space
    $("#bodyContainer").removeClass("container");

    function getSelectedRows(data) {
        var ids = '';
        for (var i = 0; i < data.length ; i++) {
            ids += data[i][0] + ',';
        }
        return ids.trimRight(',');
    }

    $(document).ready(function () {
        var auctionItemsDataTable = $('#auctionItemsTable').dataTable({
            "iDisplayLength": 100,
            dom: 'Bfrtip',
            stateSave: true,
            buttons: [
                {
                    extend: 'excelHtml5',
                    title: 'Export'
                },
                {
                    text: 'Print Bid Sheets',
                    action: function (e, dt, node, config) {
                        var data = dt.rows({ selected: true }).data();
                        if (data.length == 0) {
                            alert('You must select rows to print bid sheets for.');
                        }
                        else {
                            var ids = '';
                            for (var i = 0; i < data.length ; i++) {
                                ids += data[i][0] + ',';
                            }
                            ids = ids.trimRight(',');
                            window.open('/AuctionItems/PrintBidSheets?auctionItemIds=' + ids, '_blank');
                        }
                    }
                },
                {
                    text: 'Re-Number',
                    action: function (e, dt, node, config) {
                        var data = dt.rows({ selected: true }).data();
                        if (data.length == 0) {
                            alert('You must select rows for this action.');
                        }
                        else {
                            $("#selectedAuctionItemIds").val(getSelectedRows(data));

                            var startingItemNo = prompt("What Item No do you want to start with?");
                            if (startingItemNo != null) {
                                $("#startingAuctionItemNumber").val(startingItemNo);
                                $("#auctionItemsAction").val("RenumberAuctionItems");
                                $('#submitSelectedAuctionItemsForm').submit();
                            }
                        }
                    }
                },
                {
                    text: 'Print Labels (WIP)',
                    action: function (e, dt, node, config) {
                        var data = dt.rows({ selected: true }).data();
                        if (data.length == 0) {
                            alert('You must select rows.');
                        }
                        else {
                            var ids = '';
                            for (var i = 0; i < data.length ; i++) {
                                ids += data[i][0] + ',';
                            }
                            ids = ids.trimRight(',');
                            alert("Not built yet...")
                            //window.open('/AuctionItems/PrintBidSheets?auctionItemIds=' + ids, '_blank');
                        }
                    }
                }
            ],
            select: {
                style: 'os'
            }
        });

        $('#donationItemsTable').dataTable({
            "iDisplayLength": 100,
            dom: 'Bfrtip',
            stateSave: true,
            buttons: [
                {
                    extend: 'excelHtml5',
                    title: 'Export'
                },
                {
                    text: 'Make Single Auction Item(s)',
                    action: function (e, dt, node, config) {
                        var data = dt.rows({ selected: true }).data();
                        if (data.length == 0) {
                            alert('You must select rows to make auction items for.');
                        }
                        else {
                            var ids = '';
                            for (var i = 0; i < data.length ; i++) {
                                ids += data[i][0] + ',';
                            }
                            ids = ids.trimRight(',');
                            $("#selectedDonationItemIds").val(ids);
                            $("#donationItemsAction").val("MakeSingle");
                            $('#submitSelectedDonationItemsForm').submit();
                        }
                    }
                },
                {
                    text: 'Make a Basket',
                    action: function (e, dt, node, config) {
                        var data = dt.rows({ selected: true }).data();
                        if (data.length == 0) {
                            alert('You must select rows to make a basket for.');
                        }
                        else {
                            var ids = '';
                            for (var i = 0; i < data.length ; i++) {
                                ids += data[i][0] + ',';
                            }
                            ids = ids.trimRight(',');
                            $("#selectedDonationItemIds").val(ids);
                            $("#donationItemsAction").val("MakeBasket");
                            $('#submitSelectedDonationItemsForm').submit();
                        }
                    }
                },
                {
                    text: 'Add to Existing Basket',
                    action: function (e, dt, node, config) {
                        var data = dt.rows({ selected: true }).data();
                        if (data.length == 0) {
                            alert('You must select rows to add to a basket.');
                        }
                        else {
                            var ids = '';
                            for (var i = 0; i < data.length ; i++) {
                                ids += data[i][0] + ',';
                            }
                            ids = ids.trimRight(',');
                            $("#selectedDonationItemIds").val(ids);

                            var basketId = prompt("Which Basket Item No (from above)?");
                            if (basketId != null) {
                                $("#basketItemNumber").val(basketId);
                                $("#donationItemsAction").val("AddToBasket");
                                $('#submitSelectedDonationItemsForm').submit();
                            }
                        }
                    }
                },
                {
                    text: 'Duplicate',
                    action: function (e, dt, node, config) {
                        var data = dt.rows({ selected: true }).data();
                        if (data.length == 0) {
                            alert('You must select rows for this action.');
                        }
                        else {
                            $("#selectedDonationItemIds").val(getSelectedRows(data));

                            var numOfCopies = prompt("How many copies do you want to create of each?");
                            if (numOfCopies != null) {
                                $("#numberOfCopies").val(numOfCopies);
                                $("#donationItemsAction").val("DuplicateDonationItems");
                                $('#submitSelectedDonationItemsForm').submit();
                            }
                        }
                    }
                }
            ],
            select: {
                style: 'os'
            }
        });
    });
</script>
