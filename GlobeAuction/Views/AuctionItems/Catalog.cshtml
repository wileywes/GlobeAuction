@model GlobeAuction.Models.CatalogViewModel

@{
    ViewBag.Title = "Auction Catalog";
}

<div class="sidenav">
    @Html.ActionLink("All (" + Model.TotalItemCount + ")", "Catalog", new { SelectedCategory = "" })
    @foreach (var cat in Model.Categories.Where(c => c.ItemCount > 0))
    {
        @Html.ActionLink(cat.Name + " (" + cat.ItemCount + ")", "Catalog", new { SelectedCategory = cat.Name })
    }
</div>

@using (Html.BeginForm("Catalog", "AuctionItems", FormMethod.Post, new { @class = "form-inline" }))
{
    var cardCount = 0;

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="main">

        <div class="panel panel-default">
            <div class="panel-heading"><strong>Search</strong></div>
            <div class="panel-body">
                <div class="form-group">
                    <div class="input-group">
                        @Html.TextBoxFor(m => m.SearchString, new { @class = "form-control", placeholder = "search here" })
                    </div>
                </div>

                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </div>
        
        <div class="row">
            @for (var i = 0; i < Model.AuctionItems.Count; i++)
            {
                if (cardCount % 3 == 0 && cardCount > 0)
                {
                    @Html.Raw("</div><br /><div class=\"row\">")
                }

                @Html.HiddenFor(m => Model.AuctionItems[i].AuctionItemId)
                <div class="col-md-4">
                    <div class="card">
                        @if (!string.IsNullOrEmpty(Model.AuctionItems[i].ImageUrl))
                        {
                            <img src="@Url.Content(Model.AuctionItems[i].ImageUrl)" style="max-height:150px;max-width:200px;height:auto;width:auto;" class="center-block" />
                        }
                        <div class="card-container">
                            <h4><b>@Html.DisplayFor(m => Model.AuctionItems[i].Title)</b></h4>
                            <p>
                                @Html.DisplayFor(m => Model.AuctionItems[i].DescriptionTruncated)
                                <br />
                                <table cellspacing="5">
                                    @if (Model.AuctionItems[i].Category.IsBiddingOpen)
                                    {
                                        <tr>
                                            <td><b>Price:</b></td>
                                            <td>
                                                @Html.DisplayFor(m => Model.AuctionItems[i].HighestBid)
                                            </td>
                                        </tr>
                                    }
                                    <tr>
                                        <td></td>
                                        <td class="btn-toolbar">
                                            @if (Model.IsBidderLoggedIn)
                                            {
                                                if (Model.AuctionItems[i].Category.IsBiddingOpen)
                                                {
                                                    @Html.ActionLink("Bid", "EnterBid", "Bidders", new { itemNo = Model.AuctionItems[i].UniqueItemNumber }, htmlAttributes: new { @class = "btn btn-default btn-space" })
                                                }
                                                else
                                                {
                                                    @Html.ActionLink("Details", "CatalogItem", "AuctionItems", new { itemNo = Model.AuctionItems[i].UniqueItemNumber }, htmlAttributes: new { @class = "btn btn-default" })
                                                }
                                                if (Model.BidderCatalogFavoriteAuctionItemIds.Contains(Model.AuctionItems[i].AuctionItemId))
                                                {
                                                    <button type="button" class="btn btn-info" onclick="javascript:markCatalogFavorite(@Model.AuctionItems[i].AuctionItemId, this);">My Favorite</button>
                                                }
                                                else
                                                {
                                                    <button type="button" class="btn btn-default" onclick="javascript:markCatalogFavorite(@Model.AuctionItems[i].AuctionItemId, this);">Mark Favorite</button>
                                                }
                                            }
                                            else
                                            {
                                                @Html.ActionLink("Details", "CatalogItem", "AuctionItems", new { itemNo = Model.AuctionItems[i].UniqueItemNumber }, htmlAttributes: new { @class = "btn btn-default" })

                                                @Html.ActionLink("Login to Favorite", "Login", "Bidders", new { returnURl = Request.Url }, new { @class = "btn btn-default" })
                                            }
                                        </td>
                                    </tr>
                                </table>
                            </p>
                        </div>
                    </div>
                </div>
                {
                    cardCount++;
                }
            }
        </div>

    </div>
}


<script type="text/javascript">
    function markCatalogFavorite(auctionItemId, button) {

        if (auctionItemId == null || auctionItemId == '') {
            alert('No auction item id found.')
        }
        else {
            $.getJSON('@Url.Action("UpdateCatalogFavorite", "Bidders")', { auctionItemId: auctionItemId }, function (response) {
                if (response.success) {
                    if (button.className == "btn btn-default") {
                        button.className = "btn btn-info";
                        button.innerHTML = "My Favorite";
                    }
                    else {
                        button.className = "btn btn-default";
                        button.innerHTML = "Mark Favorite";
                    }
                }
                else {
                    alert(response.error);
                }
            });
        }
    }
</script>
