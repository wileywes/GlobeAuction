@model GlobeAuction.Models.StoreItemViewModel

@{
    ViewBag.Title = "Edit Store Item";
}

<h2>Edit Store Item</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>StoreItem</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StoreItemId)
        @Html.HiddenFor(model => model.CreateDate)

        <div class="form-group">
            @Html.MyLabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.MyLabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, 5, 100, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.MyLabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.MyLabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.MyLabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                Not Applicable for raffle ticket items - just enter 0.
            </div>
        </div>

        <div class="form-group">
            @Html.MyLabelFor(model => model.IsRaffleTicket, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.IsRaffleTicket)
                    @Html.ValidationMessageFor(model => model.IsRaffleTicket, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.MyLabelFor(model => model.CanPurchaseInBidderRegistration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.CanPurchaseInBidderRegistration)
                    @Html.ValidationMessageFor(model => model.CanPurchaseInBidderRegistration, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.MyLabelFor(model => model.CanPurchaseInAuctionCheckout, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.CanPurchaseInAuctionCheckout)
                    @Html.ValidationMessageFor(model => model.CanPurchaseInAuctionCheckout, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.MyLabelFor(model => model.CanPurchaseInStore, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.CanPurchaseInStore)
                    @Html.ValidationMessageFor(model => model.CanPurchaseInStore, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.MyLabelFor(model => model.OnlyVisibleToAdmins, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.OnlyVisibleToAdmins)
                    @Html.ValidationMessageFor(model => model.OnlyVisibleToAdmins, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        @Html.HiddenFor(m => Model.IsBundleParent)
        <br /><br />
        <h4>Bundle Components for Raffle ticket bundles</h4>
        If you need to edit the components of a raffle ticket please create a new one.  Editing of components is not currently supported.
        <hr />
        <div class="row form-group">
            <div class="col-md-2"></div>
            <div class="col-md-2">@Html.Label("Store Item Id")</div>
            <div class="col-md-2">@Html.Label("Quantity")</div>
            <div class="col-md-2">@Html.Label("Unit Price")</div>
            <div class="col-md-4"></div>
        </div>
        @for (var i = 0; i < Model.BundleComponents.Count; i++)
        {
            @Html.HiddenFor(m => Model.BundleComponents[i].BundleComponentId)
            @Html.HiddenFor(m => Model.BundleComponents[i].Quantity)
            @Html.HiddenFor(m => Model.BundleComponents[i].ComponentUnitPrice)
            @Html.HiddenFor(m => Model.BundleComponents[i].StoreItemId)
            <div class="row form-group">
                <div class="control-label col-md-2">Component @(i + 1)</div>
                <div class="col-md-2">
                    @Html.DisplayFor(m => Model.BundleComponents[i].StoreItemId, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-2">
                    @Html.DisplayFor(m => Model.BundleComponents[i].Quantity, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-2">
                    @Html.DisplayFor(m => Model.BundleComponents[i].ComponentUnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-4"></div>
            </div>
        }
        <br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
