@model GlobeAuction.Models.ReviewBidderWinningsViewModel

@{
    ViewBag.Title = "Confirm Your Winnings";
}


<div>
    <br />
    <div class="alert alert-info">
        Please review the details below for accuracy.  You can pay any outstanding invoices and review items you've already paid for.
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(false, "", htmlAttributes: new { @class = "text-danger" })

        <h3>Your Information</h3>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                Bidder #
            </dt>
            <dd>
                @Html.HiddenFor(model => model.BidderId)
                @Html.DisplayFor(model => model.BidderNumber)
            </dd>

            <dt>
                Name
            </dt>
            <dd>
                @Html.DisplayFor(model => model.BidderName)
            </dd>

            <dt>
                Email
            </dt>
            <dd>
                @Html.HiddenFor(model => model.BidderEmail)
                @Html.DisplayFor(model => model.BidderEmail)
            </dd>
        </dl>
        <br />

        if (Model.AuctionItemsNotInInvoice.Any())
        {
            <h3>Items You've Won - Click Below to Pay</h3>
            <hr />
            <h4>
                Auction Winnings -
                <span style="color:darkred;font-weight:bold">Unpaid</span>
            </h4>
            <dl class="dl-horizontal">
                <dt></dt>
                <dd>
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Item No</th>
                                <th>Category</th>
                                <th>Title</th>
                                <th>Price</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.AuctionItemsNotInInvoice.Count; i++)
                            {
                                @Html.HiddenFor(m => Model.AuctionItemsNotInInvoice[i].AuctionItemId)
                                <tr>
                                    <td>
                                        @Html.DisplayFor(m => Model.AuctionItemsNotInInvoice[i].UniqueItemNumber)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => Model.AuctionItemsNotInInvoice[i].Category)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => Model.AuctionItemsNotInInvoice[i].Title)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => Model.AuctionItemsNotInInvoice[i].WinningBid)
                                    </td>
                                </tr>
                            }
                            <tr>
                                <td></td>
                                <td></td>
                                <td align="right">
                                    <b>Total:</b>
                                </td>
                                <td>
                                    @Model.AuctionItemsNotInInvoice.Sum(a => a.WinningBid.Value).ToString("C")
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </dd>
            </dl>

            if (Model.StoreItemPurchases.Any())
            {
                <h4>Additional Items for Purchase</h4>
                <dl class="dl-horizontal">
                    <dt></dt>
                    <dd>
                        <table class="table table-bordered">
                            <tbody>
                                @for (var i = 0; i < Model.StoreItemPurchases.Count; i++)
                                {
                                    @Html.HiddenFor(m => Model.StoreItemPurchases[i].StoreItemPurchaseId)
                                    @Html.HiddenFor(m => Model.StoreItemPurchases[i].StoreItem.StoreItemId)
                                    <tr>
                                        <td>
                                            @if (!string.IsNullOrEmpty(Model.StoreItemPurchases[i].StoreItem.ImageUrl))
                                            {
                                                <img src="@Url.Content(Model.StoreItemPurchases[i].StoreItem.ImageUrl)" alt="Image" style="max alt="Image" style="max-width: calc(100% - 20px);" />
                                            }
                                        </td>
                                        <td>
                                            <b>@Html.DisplayFor(m => Model.StoreItemPurchases[i].StoreItem.Title)</b>
                                            <br />
                                            @Html.DisplayFor(m => Model.StoreItemPurchases[i].StoreItem.Description)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(m => Model.StoreItemPurchases[i].StoreItem.Price)
                                        </td>
                                        <td>
                                            @Html.EditorFor(m => Model.StoreItemPurchases[i].Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => Model.StoreItemPurchases[i].Quantity, "", new { @class = "text-danger" })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </dd>
                </dl>
            }

            <dl class="dl-horizontal">
                <dt></dt>
                <dd>
                    @if (Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanCheckoutWinners))
                    {
                        <input type="submit" name="submitButton" value="Invoice and Mark Paid" class="btn btn-primary btn-lg" />
                        <input type="button" id="skipButton" value="Skip to Next Person" class="btn btn-default btn-lg" />
                        <br /><br />
                        <input type="submit" name="submitButton" value="Pay for Your Winnings Now" class="btn btn-default btn-sm" />
                    }
                    else
                    {
                        <input type="submit" name="submitButton" value="Pay for Your Winnings Now" class="btn btn-primary btn-lg" />
                    }
                </dd>
            </dl>
        }
        else
        {
            if (Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanCheckoutWinners))
            {
                if (Model.ShowManuallyPaidSuccess)
                {
                    <div class="alert alert-success">
                        Invoice has been marked paid successfully.  Please
                        @Html.ActionLink("click here to checkout another winner", "Checkout", "Invoices") .
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        Bidder has no items to pay for.  Please
                        @Html.ActionLink("click here to checkout another winner", "Checkout", "Invoices") .
                    </div>
                }
            }

            if (!Model.Invoices.Any())
            {
                <h3>You have not won any items</h3>
                <p>
                    If you believe this is incorrect, please see a volunteer for help.
                </p>
            }
        }

        if (Model.ShowSelfPaySuccess)
        {
            <div class="alert alert-success">
                Thank you for using Express Checkout and for supporting The GLOBE Academy.  You will receive a confirmation email
                and your order details are also below.
            </div>
        }
    }
    <br />

    @if (Model.Invoices.Any())
    {
        <h3>Previous Orders</h3>
        <hr />
        foreach (var invoice in Model.Invoices.OrderBy(i => i.IsPaid))
        {
            <h4>
                Invoice #@invoice.InvoiceId -
                @if (invoice.IsPaid)
                {
                    <span style="color:darkgreen;font-weight:bold">Paid</span>
                    if (invoice.PaymentTransaction != null)
                    {
                        <span style="color:darkgreen"> - Transaction ID @invoice.PaymentTransaction.TxnId</span>
                    }
                    else if (invoice.WasMarkedPaidManually)
                    {
                        <span style="color:darkgreen"> - Paid in Person</span>
                    }
                }
                else
                {
                    <span style="color:darkred;font-weight:bold">Unpaid</span>
                    @Html.ActionLink("Pay Now", "RedirectToPayPal", "Invoices", new { iid = invoice.InvoiceId, email = invoice.Bidder.Email }, htmlAttributes: new { @class = "btn btn-primary" })
                }
            </h4>
            <dl class="dl-horizontal">
                <dt></dt>
                <dd>
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Item No</th>
                                <th>Category</th>
                                <th>Title</th>
                                <th>Quantity</th>
                                <th>Price</th>
                                @if (!invoice.IsPaid && Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanCheckoutWinners))
                                {
                                    <th></th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in invoice.AuctionItems)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(m => item.UniqueItemNumber)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => item.Category)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => item.Title)
                                    </td>
                                    <td>1</td>
                                    <td>
                                        @Html.DisplayFor(m => item.WinningBid)
                                    </td>
                                    @if (!invoice.IsPaid && Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanCheckoutWinners))
                                    {
                                        <td class="text-nowrap">
                                            @Html.ActionLink("Remove", "RemoveAuctionItemFromUnpaidInvoice", "Invoices", new { invoiceId = invoice.InvoiceId, auctionItemId = item.AuctionItemId }, htmlAttributes: new { @class = "btn btn-primary" })
                                        </td>
                                    }
                                </tr>
                            }
                            @foreach (var item in invoice.StoreItemPurchases)
                            {
                                <tr>
                                    <td></td>
                                    <td></td>
                                    <td>
                                        @Html.DisplayFor(m => item.StoreItem.Title)
                                        @(item.StoreItem.IsRaffleTicket && item.IsPaid ? " - Ticket #" + item.StoreItemPurchaseId.ToString("D8") : item.Quantity.ToString())
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => item.Quantity)
                                    </td>
                                    <td>
                                        @((item.PricePaid ?? item.Price).ToString("C"))
                                    </td>
                                    @if (!invoice.IsPaid && Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanCheckoutWinners))
                                    {
                                        <td class="text-nowrap">
                                            @Html.ActionLink("Remove", "RemoveStoreItemFromUnpaidInvoice", "Invoices", new { invoiceId = invoice.InvoiceId, sipId = item.StoreItemPurchaseId }, htmlAttributes: new { @class = "btn btn-primary" })
                                        </td>
                                    }
                                </tr>
                            }
                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td align="right">
                                    <b>Total:</b>
                                </td>
                                <td>
                                    @Html.DisplayFor(m => invoice.Total)
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </dd>
            </dl>
            <br />
        }
    }
</div>



@if (Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanCheckoutWinners))
{
    <script type="text/javascript">

        //expand the page space
        $("#skipButton").click(function () {
            if (confirm("Are you sure you want to skip payment for this person?  You should only do this if no payment was made.")) {
                document.location = '@Url.Action("Checkout", "Invoices")';
            }
        });

    </script>
}