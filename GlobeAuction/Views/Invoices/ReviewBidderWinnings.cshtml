@model GlobeAuction.Models.ReviewBidderWinningsViewModel

@{
    ViewBag.Title = "Confirm Your Winnings";
}


<div>
    <br />
    <div class="alert alert-info">
        Please review the details below for accuracy.  You can pay any outstanding invoices and review items you've already paid for.
    </div>

    @using (Html.BeginForm("ReviewBidderWinnings", "Invoices", FormMethod.Post, new { id = "reviewWinningsForm" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(false, "", htmlAttributes: new { @class = "text-danger" })

        <h3>Your Information</h3>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                Bidder #
            </dt>
            <dd>
                @Html.HiddenFor(model => model.BidderId)
                @Html.DisplayFor(model => model.BidderNumber)
            </dd>

            <dt>
                Name
            </dt>
            <dd>
                @Html.DisplayFor(model => model.BidderName)
            </dd>

            <dt>
                Email
            </dt>
            <dd>
                @Html.HiddenFor(model => model.BidderEmail)
                @Html.DisplayFor(model => model.BidderEmail)
            </dd>
        </dl>
        <br />

        if (Model.AuctionItemsNotInInvoice.Any())
        {
            <h3>Items You've Won - Click Below to Pay</h3>
            <hr />
            <h4>
                Auction Winnings -
                <span style="color:darkred;font-weight:bold">Unpaid</span>
            </h4>
            <dl class="dl-horizontal">
                <dt></dt>
                <dd>
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Item No</th>
                                <th>Category</th>
                                <th>Title</th>
                                <th>Price</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.AuctionItemsNotInInvoice.Count; i++)
                            {
                                @Html.HiddenFor(m => Model.AuctionItemsNotInInvoice[i].BidId)
                                @Html.HiddenFor(m => Model.AuctionItemsNotInInvoice[i].AuctionItem.AuctionItemId)
                                <tr>
                                    <td>
                                        @if (Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanEditItems))
                                        {
                                            @Html.ActionLink(Model.AuctionItemsNotInInvoice[i].AuctionItem.UniqueItemNumber.ToString(), "Details", "AuctionItems", new { id = Model.AuctionItemsNotInInvoice[i].AuctionItem.AuctionItemId }, new { target = "_blank" })
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(m => Model.AuctionItemsNotInInvoice[i].AuctionItem.UniqueItemNumber)
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => Model.AuctionItemsNotInInvoice[i].AuctionItem.Category)
                                    </td>
                                    <td>
                                        @(Model.AuctionItemsNotInInvoice[i].AuctionItem.DonationItems.First().UseDigitalCertificateForWinner ? "* " : "")
                                        @Html.DisplayFor(m => Model.AuctionItemsNotInInvoice[i].AuctionItem.Title)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => Model.AuctionItemsNotInInvoice[i].BidAmount)
                                    </td>
                                </tr>
                            }
                            <tr>
                                <td></td>
                                <td></td>
                                <td align="right">
                                    <b>Auction Winnings Total:</b>
                                </td>
                                <td>
                                    <input type="hidden" id="auctionItemsSum" value="@Model.AuctionItemsNotInInvoice.Sum(a => a.BidAmount)" />
                                    @Model.AuctionItemsNotInInvoice.Sum(a => a.BidAmount).ToString("C")
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    @if (Model.AuctionItemsNotInInvoice.Any(ai => ai.AuctionItem.DonationItems.First().UseDigitalCertificateForWinner))
                    {
                        <p>
                            * Certificate for this item will be emailed to you
                        </p>
                    }
                </dd>
            </dl>

            if (Model.ItemPurchases.Any())
            {
                <h4>More Ways to Support GLOBE!</h4>
                <dl class="dl-horizontal">
                    <dt></dt>
                    <dd>
                        <table class="table table-bordered">
                            <tbody>
                                @for (var i = 0; i < Model.ItemPurchases.Count; i++)
                                {
                                    @Html.HiddenFor(m => Model.ItemPurchases[i].StoreItemId)
                                    <tr>
                                        <td>
                                            @if (!string.IsNullOrEmpty(Model.ItemPurchases[i].ImageUrl))
                                            {
                                                <img src="@Url.Content(Model.ItemPurchases[i].ImageUrl)" alt="Image" style="max-height:150px;max-width:200px;height:auto;width:auto;" />
                                            }
                                        </td>
                                        <td>
                                            <b>@Html.DisplayFor(m => Model.ItemPurchases[i].Title)</b>
                                            <br />
                                            @Html.DisplayFor(m => Model.ItemPurchases[i].Description)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(m => Model.ItemPurchases[i].Price)
                                        </td>
                                        <td>
                                            @Html.EditorFor(m => Model.ItemPurchases[i].QuantityPurchased, new { htmlAttributes = new { @class = "form-control", @oninput = "recalcTotal();" } })
                                            @Html.ValidationMessageFor(model => Model.ItemPurchases[i].QuantityPurchased, "", new { @class = "text-danger" })
                                        </td>
                                    </tr>
                                }
                                <tr>
                                    <td colspan="3" align="right">
                                        <b>Total with Additional Items:</b>
                                    </td>
                                    <td>
                                        <div id="totalWithPurchases">
                                            @Model.AuctionItemsNotInInvoice.Sum(a => a.BidAmount).ToString("C")
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </dd>
                </dl>
            }

            <dl class="dl-horizontal">
                <dt></dt>
                <dd>
                    @if (Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanCheckoutWinners))
                    {
                        <input type="submit" name="submitButton" value="Invoice and Mark Paid (Cash)" class="btn btn-primary btn-lg" />
                        <input type="submit" name="submitButton" value="Invoice and Mark Paid (Check)" class="btn btn-primary btn-lg" />
                        <input type="submit" name="submitButton" value="Invoice and Mark Paid (PayPal)" class="btn btn-primary btn-lg" />
                        <br /><br />
                        <input type="button" id="skipButton" value="Skip to Next Person" class="btn btn-default btn-lg" />
                        <br /><br />
                        <input type="submit" name="submitButton" value="Pay for Your Winnings Now" class="btn btn-default btn-sm" />
                    }
                    else
                    {
                        <input type="submit" name="submitButton" value="Pay for Your Winnings Now" class="btn btn-primary btn-lg" />
                    }
                </dd>
            </dl>
        }
        else
        {
            if (Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanCheckoutWinners))
            {
                if (Model.ShowManuallyPaidSuccess)
                {
                    <div class="alert alert-success">
                        Invoice has been marked paid successfully.  Please
                        @Html.ActionLink("click here to checkout another winner", "Checkout", "Invoices") .
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        Bidder has no items to pay for.  Please
                        @Html.ActionLink("click here to checkout another winner", "Checkout", "Invoices") .
                    </div>
                }
            }

            if (!Model.Invoices.Any())
            {
                <h3>You have not won any items</h3>
                <p>
                    If you believe this is incorrect, please see a volunteer for help.
                </p>
            }
        }

        if (Model.ShowSelfPaySuccess)
        {
            <div class="alert alert-success">
                Thank you for using Express Checkout and for supporting The GLOBE Academy.  You will receive a confirmation email
                and your order details are also below.
            </div>
        }
    }
    <br />

    @if (Model.Invoices.Any())
    {
        <h3>Previous Orders</h3>
        <hr />
        foreach (var invoice in Model.Invoices.OrderBy(i => i.IsPaid))
        {
            <h4>
                Invoice #@invoice.InvoiceId -
                @if (invoice.IsPaid)
                {
                    <span style="color:darkgreen;font-weight:bold">Paid</span>
                    if (invoice.PaymentTransaction != null)
                    {
                        <span style="color:darkgreen"> - Transaction ID @invoice.PaymentTransaction.TxnId</span>
                    }
                    else if (invoice.WasMarkedPaidManually)
                    {
                        <span style="color:darkgreen"> - Paid in Person (@invoice.PaymentMethod)</span>
                    }
                }
                else
                {
                    <span style="color:darkred;font-weight:bold">Unpaid</span>
                    @Html.ActionLink("Pay Now", "RedirectToPayPal", "Invoices", new { iid = invoice.InvoiceId, email = invoice.Bidder.Email }, htmlAttributes: new { @class = "btn btn-primary" })
                }
            </h4>
            <dl class="dl-horizontal">
                <dt></dt>
                <dd>
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Item No</th>
                                <th>Category</th>
                                <th>Title</th>
                                <th>Quantity</th>
                                <th>Price</th>
                                @if ((!invoice.IsPaid && Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanCheckoutWinners)) || (invoice.IsPaid && Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanAdminUsers)))
                                {
                                    <th></th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var bid in invoice.Bids)
                            {
                                var item = bid.AuctionItem;
                                <tr>
                                    <td>
                                        @if (Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanEditItems))
                                        {
                                            @Html.ActionLink(item.UniqueItemNumber.ToString(), "Details", "AuctionItems", new { id = item.AuctionItemId }, new { target = "_blank" })
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(m => item.UniqueItemNumber)
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => item.Category.Name)
                                    </td>
                                    <td>
                                        @(item.DonationItems.First().UseDigitalCertificateForWinner ? "* " : "")
                                        @Html.DisplayFor(m => item.Title)
                                    </td>
                                    <td>1</td>
                                    <td>
                                        @Html.DisplayFor(m => bid.BidAmount)
                                    </td>
                                    @if ((!invoice.IsPaid && Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanCheckoutWinners)) || (invoice.IsPaid && Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanAdminUsers)))
                                    {
                                        <td class="text-nowrap">
                                            @if (!invoice.IsPaid && Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanCheckoutWinners))
                                            {
                                                @Html.ActionLink("Remove", "RemoveBidFromUnpaidInvoice", "Invoices", new { invoiceId = invoice.InvoiceId, bidId = bid.BidId }, htmlAttributes: new { @class = "btn btn-primary" })
                                            }
                                            @if (invoice.IsPaid && Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanAdminUsers))
                                            {
                                                @Html.ActionLink("Remove", "RemoveBidFromPaidInvoice", "Invoices", new { invoiceId = invoice.InvoiceId, bidId = bid.BidId }, htmlAttributes: new { @class = "btn btn-primary" })
                                            }
                                        </td>
                                    }
                                </tr>
                            }
                            @foreach (var item in invoice.StoreItemPurchases)
                            {
                                <tr>
                                    <td></td>
                                    <td></td>
                                    <td>
                                        @Html.DisplayFor(m => item.StoreItem.Title)
                                        @(item.StoreItem.IsRaffleTicket && item.IsPaid ? " - Ticket #" + item.StoreItemPurchaseId.ToString("D8") : item.Quantity.ToString())
                                    </td>
                                    <td>
                                        @Html.DisplayFor(m => item.Quantity)
                                    </td>
                                    <td>
                                        @((item.PricePaid ?? item.Price).ToString("C"))
                                    </td>
                                    @if (!invoice.IsPaid && Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanCheckoutWinners))
                                    {
                                        <td class="text-nowrap">
                                            @Html.ActionLink("Remove", "RemoveStoreItemFromUnpaidInvoice", "Invoices", new { invoiceId = invoice.InvoiceId, sipId = item.StoreItemPurchaseId }, htmlAttributes: new { @class = "btn btn-primary" })
                                        </td>
                                    }
                                </tr>
                            }
                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td align="right">
                                    <b>Total:</b>
                                </td>
                                <td>
                                    @Html.DisplayFor(m => invoice.Total)
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    @if (invoice.Bids.Any(b => b.AuctionItem.DonationItems.First().UseDigitalCertificateForWinner))
                    {
                        <p>
                            * Certificate for this item will be emailed to you
                        </p>
                    }
                </dd>
            </dl>
            <br />
        }
    }
</div>



@if (Request.IsAuthenticated && User.IsInRole(GlobeAuction.Models.AuctionRoles.CanCheckoutWinners))
{
    <script type="text/javascript">

        //expand the page space
        $("#skipButton").click(function () {
            if (confirm("Are you sure you want to skip payment for this person?  You should only do this if no payment was made.")) {
                document.location = '@Url.Action("Checkout", "Invoices")';
            }
        });

    </script>
}
<script type="text/javascript">
    function recalcTotal() {
        var auctionItemsTotal = parseFloat($("#auctionItemsSum").val());

        $("#reviewWinningsForm input").each(function () {
            var input = $(this);

            if (input.attr('name') != undefined) {

                if (input.attr('name').endsWith("QuantityPurchased")) {
                    var price = parseFloat(input.parent().siblings('td').eq(2).text().replace('$', ''));
                    var qty = parseFloat(input.val());

                    if (!isNaN(qty)) {
                        auctionItemsTotal = auctionItemsTotal + (price * qty);
                    }
                }
            }
        });

        $("#totalWithPurchases").html("$" + auctionItemsTotal);
    }
</script>